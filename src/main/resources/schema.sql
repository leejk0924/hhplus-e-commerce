CREATE TABLE USERS (
    ID               BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_NAME        VARCHAR(50) NOT NULL,
    POINT_BALANCE    INTEGER UNSIGNED DEFAULT 0,
    CREATED_AT       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT       TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) COMMENT='유저 정보 테이블';

-- MySQL 8.0 버전 사용하니 CHECK 제약 / 만일 8.0 버전보다 낮을 경우 ENUM 타입 고려
-- Coupon 시스템 안정화 된후 CHECK 또는 Enum 으로 변경하는게 좋아보임
CREATE TABLE COUPON (
    ID                  BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    COUPON_NAME         VARCHAR(20) NOT NULL,
    DISCOUNT_TYPE       VARCHAR(20) NOT NULL COMMENT '할인 타입 : PERCENT, AMOUNT',
    DISCOUNT_RATE       INTEGER NOT NULL DEFAULT 0 COMMENT '쿠폰 할인 금액 / 할인율',
    COUPON_INVENTORY    INTEGER UNSIGNED NOT NULL DEFAULT 0 COMMENT '쿠폰 재고',
    CREATED_AT          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT          TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID)
) COMMENT='쿠폰 정보 테이블';

CREATE TABLE USERS_COUPON (
    ID             BIGINT UNSIGNED AUTO_INCREMENT,
    USER_ID        BIGINT UNSIGNED NOT NULL,
    COUPON_ID      BIGINT UNSIGNED NOT NULL,
    COUPON_STATUS  VARCHAR(20) COMMENT '쿠폰 상태 : [발급됨, 사용됨, 만료됨]',
    REDEEMED_AT    TIMESTAMP COMMENT '쿠폰 사용 시간',
    EXPIRED_AT      TIMESTAMP COMMENT '쿠폰 만료 시간',
    CREATED_AT     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT     TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY (COUPON_ID) REFERENCES COUPON(ID)
) COMMENT='유저와 쿠폰의 Many-to-Many 관리 테이블';

CREATE TABLE ORDERS (
    ID                      BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    USER_ID                 BIGINT UNSIGNED NOT NULL,
    USER_COUPON_ID          BIGINT UNSIGNED,
    PRODUCT_TOTAL_AMOUNT    INTEGER UNSIGNED NOT NULL DEFAULT 0 COMMENT '총 물품 금액',
    TOTAL_DISCOUNT          INTEGER UNSIGNED NOT NULL DEFAULT 0 COMMENT '할인 금액',
    PAYMENT_AMOUNT          INTEGER UNSIGNED NOT NULL COMMENT '최종 결제 금액',
    ORDER_STATUS    VARCHAR(20) COMMENT '주문의 상태 : 주문완료, 결제완료',
    PURCHASED_AT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '결제 날짜',
    CREATED_AT              TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT              TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY (USER_COUPON_ID) REFERENCES USERS_COUPON(ID)
) COMMENT='주문 테이블';

CREATE TABLE PRODUCTS (
    ID                BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    PRODUCT_NAME      VARCHAR(255) NOT NULL DEFAULT 0,
    PRICE             INTEGER UNSIGNED NOT NULL DEFAULT 0,
    STOCK_QUANTITY    INTEGER UNSIGNED NOT NULL DEFAULT 0,
    CREATED_AT        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT        TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID)
) COMMENT='상품 정보 테이블';

-- 주문의 상세 내역 확인을 위해 테이블 생성
CREATE TABLE ORDER_ITEMS(
    ID              BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    ORDER_ID        BIGINT UNSIGNED NOT NULL,
    PRODUCT_ID      BIGINT UNSIGNED,
    QUANTITY        INTEGER UNSIGNED NOT NULL DEFAULT 1,
    UNIT_PRICE      INTEGER UNSIGNED NOT NULL DEFAULT 0,
    PURCHASED_AT    TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '결제 날짜',
    CREATED_AT        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT        TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
    INDEX idx_sale_date_prod (PURCHASED_AT, PRODUCT_ID)
) COMMENT='주문의 상세 품목 테이블';

CREATE TABLE POINT_HISTORY (
    ID                    BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    USER_ID               BIGINT UNSIGNED NOT NULL,
    AMOUNT                INTEGER UNSIGNED NOT NULL DEFAULT 0,
    TRANSACTION_TYPE      VARCHAR(20) NOT NULL COMMENT '내역 타입 : 포인트 충전, 포인트 사용',
    CREATED_AT            TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT            TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
) COMMENT='포인트 사용/충전 내역 테이블';
