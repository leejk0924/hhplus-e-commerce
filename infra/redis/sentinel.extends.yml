version: '3.9'
services:
  sentinel1:
    image: redis:latest
    container_name: sentinel1
    depends_on:
      redis-master: { condition: service_healthy }
      redis-slave1: { condition: service_healthy }
      redis-slave2: { condition: service_healthy }
    command:
      - sh
      - -lc
      - |
        : > /data/sentinel.conf
        exec redis-server /data/sentinel.conf --sentinel \
          --port 26379 \
          --dir /data \
          --daemonize no \
          --bind 0.0.0.0 \
          --protected-mode no \
          --sentinel resolve-hostnames yes \
          --sentinel announce-hostnames yes \
          --sentinel announce-ip 127.0.0.1 \
          --sentinel announce-port 26379 \
          --sentinel monitor server-master 127.0.0.1 6379 2 \
          --sentinel down-after-milliseconds server-master 5000 \
          --sentinel failover-timeout server-master 60000 \
          --sentinel parallel-syncs server-master 1
    ports:
      - "26379:26379"
    volumes:
      - ${PWD}/data/sentinel/sentinel1:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "PING"]
      interval: 5s
      timeout: 3s
      retries: 30

  sentinel2:
    image: redis:latest
    container_name: sentinel2
    depends_on:
      redis-master: { condition: service_healthy }
      redis-slave1: { condition: service_healthy }
      redis-slave2: { condition: service_healthy }
    command:
      - sh
      - -lc
      - |
        : > /data/sentinel.conf
        exec redis-server /data/sentinel.conf --sentinel \
          --port 26379 \
          --dir /data \
          --bind 0.0.0.0 \
          --daemonize no \
          --protected-mode no \
          --sentinel resolve-hostnames yes \
          --sentinel announce-hostnames yes \
          --sentinel announce-ip 127.0.0.1 \
          --sentinel announce-port 26380 \
          --sentinel monitor server-master 127.0.0.1 6379 2 \
          --sentinel down-after-milliseconds server-master 5000 \
          --sentinel failover-timeout server-master 60000 \
          --sentinel parallel-syncs server-master 1
    ports:
      - "26380:26379"
    volumes:
      - ${PWD}/data/sentinel/sentinel2:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "PING"]
      interval: 5s
      timeout: 3s
      retries: 30

  sentinel3:
    image: redis:latest
    container_name: sentinel3
    depends_on:
      redis-master: { condition: service_healthy }
      redis-slave1: { condition: service_healthy }
      redis-slave2: { condition: service_healthy }
    command:
      - sh
      - -lc
      - |
        : > /data/sentinel.conf
        exec redis-server /data/sentinel.conf --sentinel \
          --port 26379 \
          --dir /data \
          --bind 0.0.0.0 \
          --daemonize no \
          --protected-mode no \
          --sentinel resolve-hostnames yes \
          --sentinel announce-hostnames yes \
          --sentinel announce-ip 127.0.0.1 \
          --sentinel announce-port 26381 \
          --sentinel monitor server-master 127.0.0.1 6379 2 \
          --sentinel down-after-milliseconds server-master 5000 \
          --sentinel failover-timeout server-master 60000 \
          --sentinel parallel-syncs server-master 1
    ports:
      - "26381:26379"
    volumes:
      - ${PWD}/data/sentinel/sentinel3:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "PING"]
      interval: 5s
      timeout: 3s
      retries: 30
